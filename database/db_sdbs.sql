-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Client"
(
    id_client integer NOT NULL DEFAULT nextval('client_id_client_seq'::regclass),
    name text COLLATE pg_catalog."default" NOT NULL,
    last_name text COLLATE pg_catalog."default" NOT NULL,
    cedula character varying COLLATE pg_catalog."default" NOT NULL,
    email text COLLATE pg_catalog."default" NOT NULL,
    phone character varying COLLATE pg_catalog."default" NOT NULL,
    active boolean NOT NULL DEFAULT true,
    created timestamp with time zone NOT NULL DEFAULT now(),
    updated timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT client_pk PRIMARY KEY (id_client)
);

CREATE TABLE IF NOT EXISTS public."Invoice"
(
    id_invoice integer NOT NULL DEFAULT nextval('invoice_id_invoice_seq'::regclass),
    date timestamp with time zone NOT NULL DEFAULT now(),
    created timestamp with time zone NOT NULL DEFAULT now(),
    updated timestamp with time zone NOT NULL DEFAULT now(),
    id_payment_method integer NOT NULL,
    id_client integer NOT NULL,
    CONSTRAINT invoice_pk PRIMARY KEY (id_invoice)
);

CREATE TABLE IF NOT EXISTS public."Invoice-Product"
(
    id_invoice integer NOT NULL DEFAULT nextval('"Invoice-Product_id_invoice_seq"'::regclass),
    id_product integer NOT NULL DEFAULT nextval('"Invoice-Product_id_product_seq"'::regclass)
);

CREATE TABLE IF NOT EXISTS public."Payment_Method"
(
    id_payment_method integer NOT NULL DEFAULT nextval('payment_method_id_payment_method_seq'::regclass),
    name text COLLATE pg_catalog."default" NOT NULL,
    created timestamp with time zone NOT NULL DEFAULT now(),
    updated timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT payment_method_pk PRIMARY KEY (id_payment_method)
);

CREATE TABLE IF NOT EXISTS public."Product"
(
    id_product integer NOT NULL DEFAULT nextval('product_id_product_seq'::regclass),
    name text COLLATE pg_catalog."default" NOT NULL,
    price real NOT NULL,
    quantity integer NOT NULL DEFAULT 0,
    active boolean NOT NULL DEFAULT true,
    created timestamp with time zone NOT NULL DEFAULT now(),
    updated timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT product_pk PRIMARY KEY (id_product)
);

CREATE TABLE IF NOT EXISTS public."Rol"
(
    id_rol integer NOT NULL DEFAULT nextval('rol_id_rol_seq'::regclass),
    name text COLLATE pg_catalog."default" NOT NULL,
    created timestamp with time zone NOT NULL DEFAULT now(),
    updated timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT rol_pk PRIMARY KEY (id_rol)
);

CREATE TABLE IF NOT EXISTS public."User"
(
    name text COLLATE pg_catalog."default" NOT NULL,
    last_name text COLLATE pg_catalog."default",
    cedula character varying COLLATE pg_catalog."default" NOT NULL,
    id_user integer NOT NULL DEFAULT nextval('"User_id_user_seq"'::regclass),
    email text COLLATE pg_catalog."default" NOT NULL,
    phone character varying COLLATE pg_catalog."default" NOT NULL,
    created timestamp with time zone NOT NULL DEFAULT now(),
    updated timestamp with time zone NOT NULL DEFAULT now(),
    active boolean NOT NULL DEFAULT true,
    id_rol integer NOT NULL DEFAULT nextval('"User_id_rol_seq"'::regclass),
    CONSTRAINT user_pk PRIMARY KEY (id_user)
);

ALTER TABLE IF EXISTS public."Invoice"
    ADD FOREIGN KEY (id_payment_method)
    REFERENCES public."Payment_Method" (id_payment_method) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Invoice"
    ADD FOREIGN KEY (id_client)
    REFERENCES public."Client" (id_client) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Invoice-Product"
    ADD CONSTRAINT invoice_product_fk FOREIGN KEY (id_invoice)
    REFERENCES public."Invoice" (id_invoice) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."Invoice-Product"
    ADD FOREIGN KEY (id_product)
    REFERENCES public."Product" (id_product) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."User"
    ADD CONSTRAINT user_fk FOREIGN KEY (id_rol)
    REFERENCES public."Rol" (id_rol) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;